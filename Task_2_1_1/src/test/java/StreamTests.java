import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

/**
 * Testing module for my Parallel Stream Prime searcher.
 */
public class StreamTests {

    @Test
    public void smallTestFalse() {
        List<Integer> arr = new ArrayList<>();
        arr.add(1);
        arr.add(2);
        arr.add(3);
        arr.add(5);
        Assertions.assertFalse(StreamSearcher.searcher(arr));
    }

    @Test
    public void smallTestTrue() {
        List<Integer> arr = new ArrayList<>();
        arr.add(1);
        arr.add(2);
        arr.add(3);
        arr.add(5);
        arr.add(6);
        Assertions.assertTrue(StreamSearcher.searcher(arr));
    }

    @Test
    public void bigTest() {
        Integer[] brr = {6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039, 6997901, 6997927, 6997937, 6997967, 6998009,
            6998029, 6998039};
        List<Integer> arr = new ArrayList<>(List.of(brr));
        Assertions.assertFalse(StreamSearcher.searcher(arr));
    }
}